                                第3章 格式化输入输出

printf函数
    用来显示格式串的内容，并在该串的指定位置插入可能的值。
    调用一次可打印的值的个数没有限制。

    格式串
        普通字符和转换说明
            转换说明
                以%开头
                用来表示打印过程中待填充的值的占位符
                %后的信息指定了把数值从内部（二进制）形式转换成打印形式（字符）的方法
                C语言编译器不会检测格式串中转换说明和输出项的数量是否匹配
                一般形式：%m.pX或-%m.pX，其中m，p为可选的整型常量，X是字母。
                    m指定要显示的最少字符数量，多于m时，字段宽度会自动扩展；
                    p是精度；
                        +格式声明符d：待显示的数字的最少个数，多于p时，在数前补0；
                        +格式声明符e、f：小数点后的数字个数，p为0时，不显示小数点；
                        +格式声明符g：有效数字的最大数量(注意是有效数字)，g不显示尾随的0（不同于f）。
                        printf("%-6.2g", .0000009979);
                        %-6.2g”表示左对齐、最小6个字段宽，.2表示可以显示最大2个（去掉小数点后）有效数字。
                        之所以显示1e是因为数字9979只能显示99这两个有效数字，所有后面的7会四舍五入向前进位，
                        这样实际要显示的 数字就从.0000009979变成了.0000010000，所以结果显示为1e，
                        如果将.2变为.3的话就会显示为9.98e-007。在%f和%e当中，如果需要舍弃小数点后部分数字，
                        同样会使用这种四舍五入的显示方式。

    转义序列
        不能在字符串中单独放一个字符\，编译器会认为它是一个转义序列的开始，为了显示\需要放置两个\字符。
        显示字符%同理。
        \t的宽度依赖于操作系统，C语言本身无法保证，通常是8个字符宽度。

scanf函数
    编译器无法检查转换说明和变量是否相对应以及数量是否匹配；
    调用scanf时变量前忽略&时，变量将保留原值（无初值时，值是随机的），

    工作方法
        从输入的数据左边处理字符串，定位到适当类型的项，并在必要时跳过空白字符，在遇到不可能属于此项的字符时停止；
        如果读入成功，继续处理格式串剩余部分；如果某一项不能成功读入，
        那么scanf将不再查看格式串剩余部分，立即返回。

    输入完成后按的回车/换行符，会被scanf忽略，这个换行符将是下一次调用scanf函数是读入。

    %i在scanf格式串中可以匹配八进制、十进制、十六进制表示的整数。

    下列每对scanf格式串是否等价？如果不等价，请指出它们的差异。
    (a) "%d"与" %d"
    (b)"%d-%d-%d"与"%d -%d -%d"
    (c)"%f"与"%f "
    (d)"%f,%f"与"%f, %f"

    (a) 等价，因为scanf在开始从缓冲区读入的时候会忽略掉空格，所以即使在前面添加任意个空格均不影响结果。
    (b) 不等价，虽然在开始时scanf会忽略掉空格，但是开始读入之后并不会忽略。
        所以前者格式串%d-%d-%d在输入时不能在“-”之间加入任何空格，否则会异常退出，
        而后者%d -%d -%d则可以在“-”之间加入或不加入任意个空格。
    (c) 不等价，第二个格式串中以空格作为结尾，虽然不影响录入%f中的数字，
        但是第二个格式串并不会在回车或空格后结束，它会一直等到读入第一个非空字符时才会结束。
        而第一个%f会在遇到空格或回车之类的符号后就结束运行。
    (d)不等价，与(b)理由相同，第一个格式串中逗号直接不能加入任何空格，而第二个则可以加入0个或n个空格。

