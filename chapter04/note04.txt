                                第4章 表达式

表达式
    即表示如何计算值的公式。
    操作数也是表达式，
    简单的有变量和常量的计算，
    复杂的有把运算符用于操作数。

    运算符
        构建表达式的基本工具。
        C的基本运算符：
        ·算术运算符
        ·关系运算符
        ·逻辑运算符

    算术运算符
        一元运算符               二元运算符
        +（正）、-（负）          +、-、*、/、%

        单独的%不能操作浮点数，需调用fmod函数
        /和%运算符：
        两个操作数为整数，/会丢掉分数部分；
        右操作数为0，会导致未定义行为；
        负操作数，结果难以确定：
            C89中，/向上取整或向下取整，%与具体实现有关；
            C99中，/向零截取，%符号与左操作数相同

    由实现定义：
        所谓实现，指程序在特定的平台上编译、链接和执行所需的软件。
        实现的软件不同，程序的行为有可能稍有差异。
        正反映的C语言的目标之一：高效。
        但最好避免编写依赖于由实现定义的行为的程序。
        如果不可能做到，要在文档中说明由实现定义的行为。

    运算符优先级
        解决运算符隐含的二义性。
        算术运算符的优先级：
            高  +、-（一元）
                *、/、%
            低  +、-（二元）

    运算符结合性
        解决表达式包含两个或以上相同优先级的运算符时，优先级不够用的情况。
        左结合：
            二元算术运算符
        右结合：
            一元算术运算符

    赋值运算符
        副作用
            大多数C语言运算符不会改变操作数的值，但有些运算符会改变左操作数，类似于赋值运算符，这就是副作用。
        赋值运算符要求左操作数必须为左值。
        左值
            存储在计算机内存中的对象，不能是常量或计算结果。
    自增、自减运算符
        优先级：
            后缀>一元算术
            前缀==一元算术
        结合性：
            右结合

                          部分C语言运算符

    优先级             类型              符号              结合性
      1               后缀             ++、--              左
      2               前缀             ++、--              右
                      一元              +、 -
      3               乘法类           *、/、%              左
      4               加法类           +、-                 左
      5               赋值类        =、+=、-=、*=、/=        左

    子表达式的求值顺序
        对此C语言没有定义，
        在表达式中，既在某处访问变量的值又在别处修改它的值是不可取的。
        故：
            不在子表达式中使用赋值运算符，采用一串分离的赋值表达式。